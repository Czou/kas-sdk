   ------
   Kurento Android SDK
   ------
   ------
   Date
   ------
   
Release notes

* Version 1.1.0

** New Features

	* <<Supports H.264 video codec.>>
	
		* The parameters are configured for an encoding ajusted to real time transmission.
		
		* To encode we used library X264.
		
	* <<Compiled for version ARM7. For version ARM6 doesn't work.>>
	
	* <<Improvement in the convergence of the video quality>>
	
		* The parameters of the video encoders are configurated for get the target bit_rate fastly, 
		so get a better quality.
		
	* <<Only supports one call at a time.>>
	
	* <<Change the back or front camera during a call.>>
		
	* <<Fixed bugs>>

* Version 1.0.0 

** Features
	
	* <<Supports AMR and MP2 audio codecs.>>
	
	* <<Supports H.263 video codec.>>

		* Frame size negotiation available. Standard and custom sizes supported 
		based in <<<FRAME_SIZE>>> parameter. Only standard frame rates are supported.
		
		* Bandwidth negotiation based in <<<BANDWIDTH>>> parameter.
	
	* <<Supports MPEG4 video codec.>>
	
		* Current version only Supports CIF video with no bandwidth negotiation.
		<<<FRAME_SIZE>>> and <<<BANDWIDTH>>> parameters are ignored y this codec.
		Media core performs frame rescale to modify video dimensions from camera
		output format to CIF.
	
	* <<Video bandwidth limitation based in active network interface.>>
	
		* 350 kbps for 3G connection.
		
		* 3000 kbps for WiFi connection.
		
	* <<Automatic video rescale to surface dimension.>>
		
	* <<Configurable media profile:>> 
				
		* <Frame rate>: Target frame rate media core will try to provide. It can be
		limited by HW or negotiation constraints.
		
		* <Bit rate>: Target bit rate the media streams will try to provide.
	
		* <Group of pictures>: Ratio between P and I frames. No B frames are used.
	
	* <<Stun Support.>>
	
	* <<RTP transmission and reception capabilities for all supported codecs.
	RTP stack implementation enables symmetric connection.>>	
	
	* <<Jitter adaptation buffer.>> 
	
		KAS is designed for minimum latency and this decreases jitter tolerance. A low pass jitter adaptation filter has been implemented 
		to optimize video continuity with minimun latency.

** Known issues

	* Two SIP UAs behind the same NAT can get assigned the same Mapped Port if they use different STUN servers. This might cause port
	collision during SIP registration if they both use the same local port. In order to minimize this problem the application 
	should select a random local port to bind the SIP stack.
	selected.